@use "../../helpers/mixins" as m;
@use "../../helpers/variables" as v;
@use "../Header/header" as header;

@mixin container(
  $p: 0 0.6rem,
  $w: 100%,
  $h: 2.4rem,
  $input: false,
  $fs: 0.95rem,
  $bdr-rds: 0.4vw
) {
  width: $w;
  font-size: $fs;
  padding: $p;
  height: $h;
  outline: none;
  border-radius: $bdr-rds;

  @if $input {
    border: 0.05rem solid map-get($map: v.$color, $key: "other-blue");
  }
}

@mixin button(
  $bg-clr: map-get($map: v.$color, $key: "blue"),
  $clr: #fff,
  $bdr-clr: transparent
) {
  padding: 0.4rem 0.85rem;
  border-radius: 0.2vw;
  background-color: $bg-clr;
  color: $clr;
  border: 0.12vw solid $bdr-clr;
  text-transform: capitalize;
  letter-spacing: 0.5px;
  font-size: 0.8rem;
  cursor: pointer;

  @media (max-width: 767.98px) {
    font-size: 0.65rem;
    border-radius: 0.8vw;
  }
}

@mixin feature() {
  &-feature {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr auto;
    padding: 0.9vh v.$px-topbar-content;
    gap: 2rem;

    &-submenu {
      @include m.flex($justify: flex-start);
      width: 100%;
      gap: 1.9vw;

      &-link {
        @include m.flex();
        gap: 0.5vw;
        padding: 4vh 0.7vw 3.3vh;
        cursor: pointer;
        text-decoration: none;
        position: relative;

        &::after {
          content: "";
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 0.15vw;
          background-color: map-get($map: v.$color, $key: "blue");
          transform: scaleX(0);
          transition: transform 1.1s ease-in;
          transform-origin: left;
        }

        .icon {
          width: 20px;
          height: 20px;
          color: rgba($color: #000, $alpha: 0.5);
          transition: color 0.4s ease-in;
        }

        .text {
          color: rgba($color: #000, $alpha: 0.5);
          transition: color 0.4s ease-in;
        }

        &:hover {
          &::after {
            transform: scaleX(1);
            transition: transform 1.1s ease-out;
          }

          .icon {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }

          .text {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }
        }

        &.active {
          &::after {
            transform: scaleX(1);
            transition: transform 1.1s ease-out;
          }
          .icon {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }

          .text {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }
        }
      }
    }

    &-filter {
      @include m.flex($justify: flex-end);
      width: 100%;
      gap: 0.5vw;
      margin-top: 0.8rem;

      .add-filters {
        @include header.button($w-icon: 15px, $h-icon: 15px);
        position: relative;

        .filter-modal {
          position: absolute;
          top: 120%;
          right: 0;
          width: 220%;
          height: auto;
          // max-height: 26.5vh;
          // overflow-y: auto;
          background-color: #fff;
          border-radius: 0.4vw;
          box-shadow: 0 0 4px rgba($color: #000, $alpha: 0.15);
          padding: 0.1rem 1.1rem 1.3rem;
          cursor: default;

          &-content {
            @include m.flex($direction: column, $start: true);
            gap: 0.65rem;
            padding: 0.9rem 0 0;
            color: map-get($map: v.$color, $key: "blue");
            position: relative;

            .filter-by {
              font-size: 0.95rem;
              font-weight: 600;
            }

            .filter-list {
              @include m.flex($direction: column, $start: true);
              gap: 0.65rem;
              width: fit-content;

              &-item {
                display: grid;
                grid-template-columns: 20px 1fr;
                gap: 0.2rem;
                align-items: center;
                cursor: pointer;

                &-icon {
                  width: 15px;
                  height: 15px;
                }

                &-text {
                  font-size: 0.8rem;
                }
              }
            }
          }

          &-button {
            @include m.flex($justify: flex-end);
            gap: 0.2rem;
            margin-top: 2.1rem;

            span {
              &:first-child {
                @include button(
                  $bg-clr: map-get($map: v.$color, $key: "light-grey"),
                  $clr: map-get($map: v.$color, $key: "blue"),
                  $bdr-clr: map-get($map: v.$color, $key: "other-blue")
                );
              }

              &:last-child {
                @include button();
              }
            }
          }
        }
      }

      .clear-filter {
        @include header.button(
          $bg-clr: map-get($map: v.$color, $key: "light-grey"),
          $clr: map-get($map: v.$color, $key: "blue"),
          $bdr-clr: map-get($map: v.$color, $key: "other-blue")
        );
      }
    }
  }
}
