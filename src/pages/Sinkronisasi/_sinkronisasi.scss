@use "../../helpers/mixins" as m;
@use "../../helpers/variables" as v;
@use "../../components/Header/header" as header;
@use "./sinkronisasi-media" as sinkronisasi-media;

.sinkronisasi {
  @include m.flex($direction: column, $start: true);
  width: 100%;

  &-header {
    @include header.header();
  }

  &-message {
    margin: (v.$py-sidebar-content * 1.25) v.$px-topbar-content
      (v.$py-sidebar-content * 2.5);
    padding: v.$py-sidebar-content;
    background-color: rgba(
      $color: map-get(v.$color, "other-blue"),
      $alpha: 0.2
    );
    box-shadow: rgba($color: #000, $alpha: 0.2) 0.5px 0.5px 2px;
    border-radius: 0.4vw;
  }

  &-content {
    padding: (v.$py-sidebar-content * 1.3) v.$px-topbar-content
      (v.$py-sidebar-content * 2.5);
    width: 100%;
    @include m.flex($start: true, $direction: column);
    gap: 1.8rem;

    &-filter {
      @include m.flex($justify: space-between);
      width: 100%;

      .periode-modal {
        width: 25%;

        &-title {
          font-weight: 700;
          text-transform: uppercase;
          color: rgba($color: #000, $alpha: 0.4);
          font-size: 0.84rem;
          margin-bottom: 0.6rem;
        }

        @mixin item() {
          background-color: rgba(
            $color: map-get(v.$color, "other-blue"),
            $alpha: 0.2
          );
          box-shadow: rgba($color: #000, $alpha: 0.2) 0.5px 0.5px 2px;
          border-radius: 0.4rem;
          cursor: pointer;
          color: map-get($map: v.$color, $key: "blue");
        }

        &-default {
          @include item();
          @include m.flex($justify: space-between);
          padding: 0.8rem 1.05rem;

          .icon {
            width: 21px;
            height: 21px;
            transition: transform 0.6s ease-in;

            &.show {
              transform: rotate(180deg);
              transition: transform 0.6s ease-out;
            }
          }
        }

        &-list {
          @include item();
          @include m.flex($direction: column, $start: true);
          margin-top: 0.4rem;

          span {
            width: 100%;
            padding: 0.8rem 1.05rem;
            // border-radius: 0.4vw;
            // transition: ease-in 0.25s background-color, ease-in 0.25s color;

            &:first-child {
              border-top-left-radius: 0.4vw;
              border-top-right-radius: 0.4vw;
            }

            &:last-child {
              border-bottom-left-radius: 0.4vw;
              border-bottom-right-radius: 0.4vw;
            }

            &:hover {
              background-color: map-get($map: v.$color, $key: "blue");
              color: #fff;
              transition: ease-out 0.25s background-color, ease-out 0.25s color;
            }
          }
        }
      }

      .buttons {
        @include m.flex();
        gap: 0.4rem;

        @mixin button(
          $bg: map-get($map: v.$color, $key: "blue"),
          $bdr: transparent,
          $clr: #fff
        ) {
          background-color: $bg;
          padding: 0.5rem 0.8rem;
          @include m.flex();
          border-radius: 0.3rem;
          cursor: pointer;
          border: 2px solid $bdr;
          gap: 0.35rem;

          .icon {
            width: 18px;
            height: 18px;
            color: $clr;
          }

          .text {
            color: $clr;
            font-weight: 700;
          }
        }

        &-sync {
          @include button();
        }

        &-cancel {
          @include button(
            $bdr: map-get($map: v.$color, $key: "blue"),
            $bg: transparent,
            $clr: map-get($map: v.$color, $key: "blue")
          );
        }
      }
    }

    &-table {
      @include m.flex($direction: column, $align: flex-start);
      overflow-x: auto;
      width: 100%;
      max-width: 100%;

      .thead {
        display: grid;
        grid-template-columns: 0.4fr 1fr 1fr;
        width: 100%;

        .row {
          font-size: 1vw;
          font-weight: 600;
          color: rgba($color: #000, $alpha: 0.5);
          background-color: rgba(
            $color: map-get($map: v.$color, $key: "other-blue"),
            $alpha: 0.2
          );
          padding: 3.1vh 1vw;
          text-transform: capitalize;
          // word-break: break-word;
          // white-space: normal;
          line-height: 135%;
          text-align: center;
          @include m.flex();

          .icon {
            width: 21px;
            height: 21px;
            cursor: pointer;
          }

          &:first-child {
            border-top-left-radius: 0.6vw;
            border-bottom-left-radius: 0.6vw;
          }

          &:last-child {
            border-top-right-radius: 0.6vw;
            border-bottom-right-radius: 0.6vw;
          }

          &:nth-child(2) {
            @include m.flex($justify: flex-start);
          }
        }
      }

      .tbody {
        display: grid;
        // grid-template-columns: repeat(11, 4rem);
        grid-template-columns: 0.4fr 1fr 1fr;
        border-bottom: #ddd solid 0.15vw;
        width: 100%;

        .col {
          font-size: 1vw;
          color: rgba($color: #000, $alpha: 0.8);
          padding: 3.6vh 1vw;
          font-weight: 500;
          line-height: 140%;
          word-break: break-word;
          white-space: normal;
          @include m.flex();
          text-align: center;

          &:nth-child(2) {
            @include m.flex($justify: flex-start);
            text-align: start;
          }

          .icon {
            width: 19px;
            height: 19px;
            cursor: pointer;
          }
        }
      }
    }
  }
}

@include sinkronisasi-media.sinkronisasi-media();
